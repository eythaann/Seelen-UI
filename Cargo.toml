cargo-features = ["profile-rustflags"]

[package]
name = "seelen-ui"
version = "2.0.14"
description = "Seelen UI Background"
authors = ["eythaann"]
license = "Polyform Strict License"
repository = "https://github.com/eythaann/seelen-ui.git"
default-run = "seelen-ui"
edition = "2021"
rust-version = "1.70"
build = "scripts/build.rs"

[[bin]]
name = "seelen-ui"
path = "src/background/main.rs"

[[bin]]
name = "slu-service"
path = "src/service/main.rs"

[profile.dev]
incremental = true
rustflags = ["-Z", "threads=8"]

[profile.release]
debug = 1
opt-level = "z"
lto = true
codegen-units = 1
rustflags = ["-Z", "threads=8"]

[build-dependencies]
tauri-build = { version = "2.0.0-rc", features = [] }

[dependencies]
tauri = { version = "2.0.0-rc", features = [
    "protocol-asset",
    "tray-icon",
    "image-png",
] }
tauri-plugin-fs = "2.0.0-rc"
tauri-plugin-dialog = "2.0.0-rc"
tauri-plugin-autostart = "2.0.0-rc"
tauri-plugin-shell = "2.0.0-rc"
tauri-plugin-process = "2.0.0-rc"
tauri-plugin-log = "2.0.0-rc"
tauri-plugin-updater = "2.0.0-rc"
tauri-plugin-deep-link = "2.0.0-rc"
tauri-plugin-http = "2.0.0-rc"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9.34"
lazy_static = "1.4.0"
parking_lot = "0.12.1"
log = "0.4"
uuid = "1.8.0"
image = { version = "0.25.5", features = ["ico"] }
widestring = "1.0.2"
itertools = "0.12.1"
clap = { version = "4.5.4", features = ["derive", "string"] }
os_info = "3.9.2"
crossbeam-channel = "0.5.12"
regex = "1.11.1"
getset = "0.1.3"
phf = "0.11.2"
sysinfo = "0.30.12"
battery = "0.7.8"
winvd = { git = "https://github.com/eythaann/virtualdesktopaccessor.git" }
winreg = "0.52.0"
windows-core = "=0.58.0" # windows-rs already depends and reexports this, but we need it as a direct dependency (implement macro)
win-screenshot = "4.0.8"
base64 = "0.22.1"
arc-swap = "1.7.1"
notify-debouncer-full = "0.3.1"
encoding_rs = "0.8.34"
evalexpr = "=11.3.0"
quick-xml = { version = "0.36.2", features = ["serialize", "encoding"] }
backtrace = "0.3.71"
owo-colors = "4.1.0"
rust-i18n = "3.1.2"

[dependencies.seelen-core]
git = "https://github.com/Seelen-Inc/slu-lib.git" # for release/pre-release/nightly
# path = "../slu-lib"                               # for local development

[dependencies.windows]
version = "=0.58.0"
features = [
    "Win32_Foundation",
    "ApplicationModel",
    "ApplicationModel_Core",               # uwp apps
    "ApplicationModel_Background",         # background taks
    "Foundation_Collections",              # uwp apps
    "Management_Deployment",               # uwp apps
    "Win32_Globalization",
    "Win32_UI_Input_KeyboardAndMouse",
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI_Shell",
    "Win32_UI_Shell_PropertiesSystem",
    "Win32_UI_Accessibility",
    "Win32_Graphics_Dwm",
    "Win32_System_Com",
    "Win32_System_Console",                # required to attach to console on cli mode
    "Win32_System_Registry",               # required for system tray icon module
    "Win32_Security",                      # required for power management (shutdown, reboot)
    "Win32_Security_Authorization",        # required to change security on services
    "Win32_System_Kernel",
    "Win32_System_IO",                     # Input/Output devices
    "Win32_System_Services",
    "Win32_System_EventLog",               # needed for logger on service
    "Win32_System_TaskScheduler",
    "Win32_System_Threading",
    "Win32_System_WinRT",                  # uwp apps
    "Win32_System_StationsAndDesktops",
    "Win32_System_RemoteDesktop",
    "Win32_System_ProcessStatus",
    "Wdk_System_Threading",                # required to get system info (NtQueryInformationProcess)
    "Wdk_System_SystemInformation",        # required to get system info (NtQuerySystemInformation)
    "Wdk_System_SystemServices",           # required to get system info (PROCESS_EXTENDED_BASIC_INFORMATION)
    "Win32_System_Power",                  # required for power management (battery - AC)
    "Win32_System_Shutdown",               # required for power management (shutdown)
    "Win32_Storage_FileSystem",            # PKEYS and Devices/Storage/etc
    "Win32_Storage_EnhancedStorage",       # PKEYS and Devices/Storage/etc
    "Win32_Storage_Packaging_Appx",        # UWP apps
    "Win32_Media_Audio_Endpoints",         # required for audio module
    "Win32_Media_DeviceManager",           # required for audio module
    "Media",                               # required for audio module
    "Media_Control",                       # required for audio module
    "Storage_Streams",                     # required for audio module
    "Win32_Devices_Display",               # required for display (brightness, etc)
    "Win32_Devices_FunctionDiscovery",     # PKEYS for Devices
    "Devices_Custom",
    "UI_Core",
    "UI_Notifications_Management",         # required for notifications
    "UI_ViewManagement",                   # required for colors UISettings
    "Win32_NetworkManagement_IpHelper",    # required for network manager
    "Win32_NetworkManagement_Ndis",        # required for network manager
    "Win32_Networking_WinSock",            # required for network manager
    "Win32_Networking_NetworkListManager", # required for network manager // events
    "Win32_NetworkManagement_WiFi",        # required for network manager // wifi
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
custom-protocol = ["tauri/custom-protocol"]
devtools = ["tauri/devtools"]
